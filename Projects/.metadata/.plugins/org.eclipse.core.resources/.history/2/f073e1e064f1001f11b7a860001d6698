package data;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;

import businessLogic.TextAnalyzer;

public class EmotionsClassifier extends TextAnalyzer{
	private ArrayList<Classification> values;
	private String resumeFile = "C:/D/DU/Materias/2024-2/Prog2/FinalProject/resources/EmotionsResume.txt";
	private String scriptPath = "resources/Emotions.py";
	
    public EmotionsClassifier(String text) {
        super(text);
		this.values = new ArrayList<>();
	}
	
    public void prediction(String mode) {
        String output = runPythonScript(scriptPath, text, mode);
        System.out.println("Salida de Python:\n" + output); // <-- Muestra la salida en Eclipse
    }
	
	public void analyze() throws IOException{		
		File file = new File(resumeFile);

        if (!file.exists()) {
            throw new FileNotFoundException("No se encontrÃ³ el archivo: " + resumeFile);
        }

        BufferedReader br = new BufferedReader(new FileReader(file));
        String line;

        while ((line = br.readLine()) != null) {
            String[] parts = line.split(", ");
            String anger = parts[0];
            String love = parts[2];
            String happiness = parts[4];
            String fear = parts[6];
            String sadness = parts[8];
            
            Integer anger_val = Integer.parseInt(parts[1]);
            Integer love_val = Integer.parseInt(parts[3]);
            Integer happiness_val = Integer.parseInt(parts[3]);
            Integer fear_val = Integer.parseInt(parts[3]);
            Integer sadness_val = Integer.parseInt(parts[3]);
            
            values.add(new Classification(anger,anger_val));
            values.add(new Classification(love,love_val));
            values.add(new Classification(happiness,happiness_val));
            values.add(new Classification(fear,fear_val));
            values.add(new Classification(sadness,sadness_val));
        }
        br.close();
	}
	
	public void getValues() {
		values.forEach(System.out::println);
	}
}
